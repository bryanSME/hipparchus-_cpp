/*\r\n\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n\r\n * this work for additional information regarding copyright ownership.\r\n\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n\r\n * (the "License"); you may not use this file except in compliance with\r\n\r\n * the License.  You may obtain a copy of the License at\r\n\r\n *\r\n\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n *\r\n\r\n * Unless required by applicable law or agreed to in writing, software\r\n\r\n * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n\r\n * See the License for the specific language governing permissions and\r\n\r\n * limitations under the License.\r\n\r\n */\r\n\r\n\r\n\r\n/*\r\n\r\n * This is not the original file distributed by the Apache Software Foundation\r\n\r\n * It has been modified by the Hipparchus project\r\n\r\n */\r\n\r\n//package org.hipparchus.linear;\r\n\r\n\r\n\r\n//import org.hipparchus.Field_Element;\r\n\r\n\r\n\r\n/**\r\n\r\n * This interface defines a visitor for the entries of a vector. Visitors\r\n\r\n * implementing this interface may alter the entries of the vector being\r\n\r\n * visited.\r\n\r\n *\r\n\r\n * @param <T> the type of the field elements\r\n\r\n */\r\n\r\nclass Field_VectorChangingVisitor<T extends Field_Element<?>> \r\n\r\n{\r\n\r\n    /**\r\n\r\n     * Start visiting a vector. This method is called once, before any entry\r\n\r\n     * of the vector is visited.\r\n\r\n     *\r\n\r\n     * @param dimension the size of the vector\r\n\r\n     * @param start the index of the first entry to be visited\r\n\r\n     * @param end the index of the last entry to be visited (inclusive)\r\n\r\n     */\r\n\r\n    void start(const int& dimension, int start, int end);\r\n\r\n\r\n\r\n    /**\r\n\r\n     * Visit one entry of the vector.\r\n\r\n     *\r\n\r\n     * @param index the index of the entry being visited\r\n\r\n     * @param value the value of the entry being visited\r\n\r\n     * @return the value of the entry being visited\r\n\r\n     */\r\n\r\n    T visit(const int& index, T value);\r\n\r\n\r\n\r\n    /**\r\n\r\n     * End visiting a vector. This method is called once, after all entries of\r\n\r\n     * the vector have been visited.\r\n\r\n     *\r\n\r\n     * @return the value returned after visiting all entries\r\n\r\n     */\r\n\r\n    T end();\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n