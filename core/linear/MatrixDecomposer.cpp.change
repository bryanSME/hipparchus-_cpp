/*\r\n\r\n * Licensed to the Hipparchus project under one or more\r\n\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n\r\n * this work for additional information regarding copyright ownership.\r\n\r\n * The Hipparchus project licenses this file to You under the Apache License, Version 2.0\r\n\r\n * (the "License"); you may not use this file except in compliance with\r\n\r\n * the License.  You may obtain a copy of the License at\r\n\r\n *\r\n\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n *\r\n\r\n * Unless required by applicable law or agreed to in writing, software\r\n\r\n * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n\r\n * See the License for the specific language governing permissions and\r\n\r\n * limitations under the License.\r\n\r\n */\r\n\r\n\r\n\r\n//package org.hipparchus.linear;\r\n\r\n\r\n\r\n//import org.hipparchus.exception.;\r\n\r\n\r\n\r\n/** Interface for all algorithms providing matrix decomposition.\r\n\r\n * @since 1.3\r\n\r\n */\r\n\r\nclass Matrix_Decomposer \r\n\r\n{\r\n\r\n\r\n\r\n    /**\r\n\r\n     * Get a solver for finding the A &times; X = B solution in least square sense.\r\n\r\n     * @param a coefficient matrix A to decompose\r\n\r\n     * @return a solver\r\n\r\n     * @ if decomposition fails\r\n\r\n     */\r\n\r\n    Decomposition_Solver decompose(Real_Matrix a) ;\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n