/*\r\n\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n\r\n * this work for additional information regarding copyright ownership.\r\n\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n\r\n * (the "License"); you may not use this file except in compliance with\r\n\r\n * the License.  You may obtain a copy of the License at\r\n\r\n *\r\n\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n *\r\n\r\n * Unless required by applicable law or agreed to in writing, software\r\n\r\n * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n\r\n * See the License for the specific language governing permissions and\r\n\r\n * limitations under the License.\r\n\r\n */\r\n\r\n\r\n\r\n/*\r\n\r\n * This is not the original file distributed by the Apache Software Foundation\r\n\r\n * It has been modified by the Hipparchus project\r\n\r\n */\r\n\r\n//package org.hipparchus.analysis.interpolation;\r\n\r\n\r\n\r\n//import org.hipparchus.exception.Localized_Core_Formats;\r\n\r\n//import org.hipparchus.exception.;\r\n\r\n//import org.hipparchus.exception.Null_Argument_Exception;\r\n\r\n//import org.hipparchus.util.Math_Arrays;\r\n\r\n\r\n\r\n/**\r\n\r\n * Generates a piecewise-bicubic interpolating function.\r\n\r\n *\r\n\r\n */\r\n\r\nclass PiecewiseBicubicSpline_Interpolator\r\n\r\n    : Bivariate_Grid_Interpolator \r\n\r\n    {\r\n\r\n\r\n\r\n    /**\r\n\r\n     * {@inherit_doc}\r\n\r\n     */\r\n\r\n    //override\r\n\r\n    public Piecewise_Bicubic_Spline_Interpolating_Function interpolate( const std::vector<double>& xval, const std::vector<double>& yval, const std::vector<std::vector<double>> fval)\r\n\r\n        , Null_Argument_Exception \r\n\r\n        {\r\n\r\n        if (xval == null || yval == null || fval == null || fval[0] == null) \r\n\r\n        {\r\n\r\n            throw Null_Argument_Exception();\r\n\r\n        }\r\n\r\n\r\n\r\n        if (xval.size() == 0 || yval.size() == 0 || fval.size() == 0) \r\n\r\n        {\r\n\r\n            throw (Localized_Core_Formats.NO_DATA);\r\n\r\n        }\r\n\r\n\r\n\r\n        Math_Arrays::check_order(xval);\r\n\r\n        Math_Arrays::check_order(yval);\r\n\r\n\r\n\r\n        return Piecewise_Bicubic_Spline_Interpolating_Function(xval, yval, fval);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n