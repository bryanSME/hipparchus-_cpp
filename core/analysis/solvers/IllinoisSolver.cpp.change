/*\r\n\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n\r\n * this work for additional information regarding copyright ownership.\r\n\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n\r\n * (the "License"); you may not use this file except in compliance with\r\n\r\n * the License.  You may obtain a copy of the License at\r\n\r\n *\r\n\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n *\r\n\r\n * Unless required by applicable law or agreed to in writing, software\r\n\r\n * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n\r\n * See the License for the specific language governing permissions and\r\n\r\n * limitations under the License.\r\n\r\n */\r\n\r\n\r\n\r\n/*\r\n\r\n * This is not the original file distributed by the Apache Software Foundation\r\n\r\n * It has been modified by the Hipparchus project\r\n\r\n */\r\n\r\n\r\n\r\n//package org.hipparchus.analysis.solvers;\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n\r\n * Implements the <em>Illinois</em> method for root-finding (approximating\r\n\r\n * a zero of a univariate real function). It is a modified\r\n\r\n * {@link Regula_Falsi_Solver <em>Regula Falsi</em>} method.\r\n\r\n *\r\n\r\n * <p>Like the <em>Regula Falsi</em> method, convergence is guaranteed by\r\n\r\n * maintaining a bracketed solution. The <em>Illinois</em> method however, * should converge much faster than the original <em>Regula Falsi</em>\r\n\r\n * method. Furthermore, this implementation of the <em>Illinois</em> method\r\n\r\n * should not suffer from the same implementation issues as the <em>Regula\r\n\r\n * Falsi</em> method, which may fail to convergence in certain cases.</p>\r\n\r\n *\r\n\r\n * <p>The <em>Illinois</em> method assumes that the function is continuous, * but not necessarily smooth.</p>\r\n\r\n *\r\n\r\n * <p>Implementation based on the following article: M. Dowell and P. Jarratt, * <em>A modified regula falsi method for computing the root of an\r\n\r\n * equation</em>, BIT Numerical Mathematics, volume 11, number 2, * pages 168-174, Springer, 1971.</p>\r\n\r\n *\r\n\r\n */\r\n\r\nclass Illinois_Solver extends BaseSecant_Solver \r\n\r\n{\r\n\r\n\r\n\r\n    /** Construct a solver with default accuracy (1e-6). */\r\n\r\n    public Illinois_Solver() \r\n\r\n    {\r\n\r\n        super(DEFAULT_ABSOLUTE_ACCURACY, Method.ILLINOIS);\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n\r\n     * Construct a solver.\r\n\r\n     *\r\n\r\n     * @param absolute_accuracy Absolute accuracy.\r\n\r\n     */\r\n\r\n    public Illinois_Solver(const double& absolute_accuracy) \r\n\r\n    {\r\n\r\n        super(absolute_accuracy, Method.ILLINOIS);\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n\r\n     * Construct a solver.\r\n\r\n     *\r\n\r\n     * @param relative_accuracy Relative accuracy.\r\n\r\n     * @param absolute_accuracy Absolute accuracy.\r\n\r\n     */\r\n\r\n    public Illinois_Solver(const double relative_accuracy, const double& absolute_accuracy) \r\n\r\n    {\r\n\r\n        super(relative_accuracy, absolute_accuracy, Method.ILLINOIS);\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n\r\n     * Construct a solver.\r\n\r\n     *\r\n\r\n     * @param relative_accuracy Relative accuracy.\r\n\r\n     * @param absolute_accuracy Absolute accuracy.\r\n\r\n     * @param function_value_accuracy Maximum function value error.\r\n\r\n     */\r\n\r\n    public Illinois_Solver(const double relative_accuracy, const double& absolute_accuracy, const double function_value_accuracy) \r\n\r\n    {\r\n\r\n        super(relative_accuracy, absolute_accuracy, function_value_accuracy, Method.ILLINOIS);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n