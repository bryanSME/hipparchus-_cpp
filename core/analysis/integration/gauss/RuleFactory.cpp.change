/*\r\n\r\n * Licensed to the Hipparchus project under one or more\r\n\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n\r\n * this work for additional information regarding copyright ownership.\r\n\r\n * The Hipparchus project licenses this file to You under the Apache License, Version 2.0\r\n\r\n * (the "License"); you may not use this file except in compliance with\r\n\r\n * the License.  You may obtain a copy of the License at\r\n\r\n *\r\n\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n *\r\n\r\n * Unless required by applicable law or agreed to in writing, software\r\n\r\n * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n\r\n * See the License for the specific language governing permissions and\r\n\r\n * limitations under the License.\r\n\r\n */\r\n\r\n//package org.hipparchus.analysis.integration.gauss;\r\n\r\n\r\n\r\n//import org.hipparchus.exception.;\r\n\r\n//import org.hipparchus.util.Pair;\r\n\r\n\r\n\r\n/** Interface for rules that determines the integration nodes and their weights.\r\n\r\n * @since 2.0\r\n\r\n */\r\n\r\nclass Rule_Factory \r\n\r\n{\r\n\r\n\r\n\r\n    /**\r\n\r\n     * Gets a copy of the quadrature rule with the given number of integration\r\n\r\n     * points.\r\n\r\n     * The number of points is arbitrarily limited to 1000. It prevents resources\r\n\r\n     * exhaustion. In practice the number of points is often much lower.\r\n\r\n     *\r\n\r\n     * @param number_of_points Number of integration points.\r\n\r\n     * @return a copy of the integration rule.\r\n\r\n     * @ if {@code number_of_points < 1}.\r\n\r\n     * @ if {@code number_of_points > 1000}.\r\n\r\n     * @ if the elements of the rule pair do not\r\n\r\n     * have the same length.\r\n\r\n     */\r\n\r\n    Pair<std::vector<double>, std::vector<double>> get_rule(const int& number_of_points) ;\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n