/*\r\n\r\n\r\n\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n\r\n\r\n\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n\r\n\r\n\r\n * this work for additional information regarding copyright ownership.\r\n\r\n\r\n\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n\r\n\r\n\r\n * (the "License"); you may not use this file except in compliance with\r\n\r\n\r\n\r\n * the License.  You may obtain a copy of the License at\r\n\r\n\r\n\r\n *\r\n\r\n\r\n\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n\r\n\r\n *\r\n\r\n\r\n\r\n * Unless required by applicable law or agreed to in writing, software\r\n\r\n\r\n\r\n * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n\r\n\r\n\r\n * See the License for the specific language governing permissions and\r\n\r\n\r\n\r\n * limitations under the License.\r\n\r\n\r\n\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\n\r\n * This is not the original file distributed by the Apache Software Foundation\r\n\r\n\r\n\r\n * It has been modified by the Hipparchus project\r\n\r\n\r\n\r\n */\r\n\r\n\r\n\r\n/**\r\n\r\n\r\n\r\n *\r\n\r\n\r\n\r\n * <p>\r\n\r\n\r\n\r\n *   This //package holds the main interfaces and basic building block classes\r\n\r\n\r\n\r\n *   dealing with differentiation.\r\n\r\n\r\n\r\n *   The core class is {@link org.hipparchus.analysis.differentiation.Derivative_Structure\r\n\r\n\r\n\r\n *   Derivative_Structure} which holds the value and the differentials of a function. This class\r\n\r\n\r\n\r\n *   handles some arbitrary number of free parameters and arbitrary differentiation order. It is used\r\n\r\n\r\n\r\n *   both as the input and the output type for the {@link\r\n\r\n\r\n\r\n *   org.hipparchus.analysis.differentiation.Univariate_Differentiable_Function\r\n\r\n\r\n\r\n *   Univariate_Differentiable_Function} interface. Any differentiable function should implement this\r\n\r\n\r\n\r\n *   interface.\r\n\r\n\r\n\r\n * </p>\r\n\r\n\r\n\r\n * <p>\r\n\r\n\r\n\r\n *   The {@link org.hipparchus.analysis.differentiation.Univariate_Derivative_1 Univariate_Derivative_1}, *   {@link org.hipparchus.analysis.differentiation.Univariate_Derivative_2 Univariate_Derivative_2} and\r\n\r\n\r\n\r\n *   {@link org.hipparchus.analysis.differentiation.Gradient Gradient} classes are more restricted\r\n\r\n\r\n\r\n *   implementation of classes holding the value and the differentials of a function. These classes\r\n\r\n\r\n\r\n *   handle only either one free parameter (i.e. univariate functions) with derivation orders 1 or 2, *   or several free parameters with derivation order 1. As they arefar less general than {@link\r\n\r\n\r\n\r\n *   org.hipparchus.analysis.differentiation.Derivative_Structure Derivative_Structure}, they have less\r\n\r\n\r\n\r\n *   overhead and are more efficient in their respective domains.\r\n\r\n\r\n\r\n * </p>\r\n\r\n\r\n\r\n * <p>\r\n\r\n\r\n\r\n *   The {@link org.hipparchus.analysis.differentiation.Univariate_Function_differentiator\r\n\r\n\r\n\r\n *   Univariate_Function_differentiator} interface defines a way to differentiate a simple {@link\r\n\r\n\r\n\r\n *   org.hipparchus.analysis.Univariate_Function Univariate_Function} and get a {@link\r\n\r\n\r\n\r\n *   org.hipparchus.analysis.differentiation.Univariate_Differentiable_Function\r\n\r\n\r\n\r\n *   Univariate_Differentiable_Function}.\r\n\r\n\r\n\r\n * </p>\r\n\r\n\r\n\r\n * <p>\r\n\r\n\r\n\r\n *   Similar interfaces also exist for multivariate functions and for vector or matrix valued functions.\r\n\r\n\r\n\r\n * </p>\r\n\r\n\r\n\r\n *\r\n\r\n\r\n\r\n */\r\n\r\n\r\n\r\n//package org.hipparchus.analysis.differentiation;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n